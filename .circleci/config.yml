version: 2
jobs:
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/node
      - image: postgres
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: app_test_db
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: Install DB Dependencies
          command: 'sudo npm install -g db-migrate'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Setup custom environment variables
          command: |
            echo 'export DATABASE_TEST_URL=postgres://ubuntu@localhost:5432/app_test_db' >> $BASH_ENV
            echo 'export NODE_ENV=test' >> $BASH_ENV
      - run:
          name: Setup Test DB
          command: db-migrate up -e test
      - run:
          name: Test
          command: npm test
  deploy:
    working_directory: ~/repo
    docker:
      - image: circleci/node
    steps:
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Deploy App
          command: |
            if [ "${CIRCLE_BRANCH}" == "dev" ]; then
              echo ${CIRCLE_BRANCH} # Deploy to Dev Server
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              echo ${CIRCLE_BRANCH} # Deploy to Staging Server
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo ${CIRCLE_BRANCH} # Deploy to Master Server
            fi
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - dev
                - staging
