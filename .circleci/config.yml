version: 2
jobs:
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/node
      - image: redis
      - image: postgres
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: app_test_db
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: Install DB Dependencies
          command: 'sudo npm install -g db-migrate'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Check Dependencies Security
          command: npm audit
      - run:
          name: Check Outdated Dependencies
          command: npm outdated
      - run:
          name: Eslint Check
          command: npm run lint
      - run: chmod 700 tools/*.sh
      - run:
          name: Set Up Test Environment variables
          command: tools/test_env.sh
      - run:
          name: Set Up Test DB
          command: db-migrate up -e test
      - run:
          name: Seed Test Data
          command: npm run seed-test
      - run:
          name: Run Test
          command: npm test
      - run:
          name: Coverage Report
          command: npm run report-coverage
  deploy-development:
    working_directory: ~/repo
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run:
          name: Prepare Script
          command: chmod 700 tools/deploy_dev.sh
      - run:
          name: Deploy to Development
          command: tools/deploy_dev.sh
  deploy-production:
    working_directory: ~/repo
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run:
          name: Prepare Script
          command: chmod 700 tools/deploy_prod.sh
      - run:
          name: Deploy to Production
          command: tools/deploy_prod.sh
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - deploy-development:
          requires:
            - test
          filters:
            branches:
              only:
                - dev
      - deploy-staging:
          requires:
            - test
          filters:
            branches:
              only:
                - staging
      - deploy-production:
          requires:
            - test
          filters:
            branches:
              only:
                - master
