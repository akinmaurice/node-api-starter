openapi: 3.0.2
info:
  version: 1.0.0
  title: Node Api Starter
  description: A Node JS API Boilerplate with authentication and authorization Using Express JS, Postgres DB and Redis.

servers:
- url: http://localhost:3023
  description: Development Server

paths:
  /:
    get:
      tags:
        - Index Route
      summary: Returns the service name
      description: Optional description
      responses:
        200:
          description: Application Service name
          content:
            application/json:
              schema:
                title: Sample
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  data:
                    type: string
                    example: Service
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                title: Sample
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Resource not found
  /unknown:
    get:
      tags:
        - Invalid Route
      summary: Returns error for an invalid route
      description: When a route does not exist, this is the sample response
      responses:
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                title: Sample
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Resource not found
  /auth/login:
    post:
      tags:
        - Login Route
      summary: Login Route
      description: Generate Access token on successful login
      responses:
        200:
          description: Successful Login
          content:
            application/json:
              schema:
                title: Sample
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ
                      user_details:
                        type: object
                        properties:
                          id:
                            type: string
                            example: user-12345
                          email:
                            type: string
                            example: example@gmail.com
                          username:
                            type: string
                            example: example
        400:
          description: Unsuccessful Login
          content:
            application/json:
              schema:
                title: Sample
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid Username/Email and Password combination





